<?php

/**
 * @file
 * Install hooks for the BC Translate module.
 */

/**
 * Implements hook_install().
 */
function bc_translate_install() {
  module_load_include('inc', 'transperfect', 'transperfect_locale_mapping');
  add_locale_mapping('en', 'English', 'en_US');
  add_locale_mapping('fr', 'French', 'fr_FR');
  add_locale_mapping('zh-hans', 'Chinese, Simplified', 'zh_CN');
  add_locale_mapping('de', 'German', 'de_DE');
  variable_set('transperfect_pd_url', '');
  variable_set('transperfect_pd_username', '');
  variable_set('transperfect_pd_password', '');
  variable_set('transperfect_pd_projectid', '');
  variable_set('transperfect_pd_submissionprefix', 'DRU_');
  variable_set('transperfect_pd_classifier', 'XML');
  variable_set('transperfect_pd_max_target', '99999');
  save_project_names();

  // Configure Internationalization for Nodes.
  module_load_include('inc', 'transperfect', 'transperfect_field_configuration');
  foreach (node_type_get_types() as $node_type) {
    variable_set("language_content_type_{$node_type->type}", TRANSLATION_ENABLED);
    // Queue all fields for translation on each content type during install.
    insert_gl_field_config('[all]', $node_type->type);
  }

  // Configure Internationalization for Taxonomy terms.
  foreach (taxonomy_get_vocabularies() as $vocabulary) {
    $vocabulary->i18n_mode = 4;
    taxonomy_vocabulary_save($vocabulary);
  }

  // Configure Internationalization for Menu items.
  $site_menus = menu_get_menus();
  foreach (array_keys($site_menus) as $menu_name) {
    $menu = menu_load($menu_name);
    $menu['i18n_mode'] = 5;
    menu_save($menu);
  }

  // Configure Internationalization for Fieldable Panels Panes.
  module_load_include('inc', 'entity_translation', 'entity_translation.admin');
  $form_state = array();
  $form_state['values']['entity_translation_entity_types']['fieldable_panels_pane'] = 'fieldable_panels_pane';
  drupal_form_submit('entity_translation_admin_form', $form_state);

}
